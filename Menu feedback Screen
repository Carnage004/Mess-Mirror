import React, { useState } from "react";

// Props could include menu details, feedback list, etc.
export default function MenuFeedbackScreen({ messName, onBack }) {
  // This would come from backend in a real app
  const meals = [
    { name: "Breakfast", items: "Poha ‚Ä¢ Tea", price: 25 },
    { name: "Lunch", items: "Rice ‚Ä¢ Dal ‚Ä¢ Paneer Bhurji ‚Ä¢ Salad", price: 45 },
    { name: "Dinner", items: "Chapati ‚Ä¢ Veg Curry ‚Ä¢ Raita", price: 50 },
  ];
  const [feedback, setFeedback] = useState([
    { user: "Asha", ago: "2 hours ago", comment: "Lunch was good, but please reduce salt." },
    { user: "Rohit", ago: "5 hours ago", comment: "Paneer was soft & tasty. üëç" },
  ]);
  const [emoji, setEmoji] = useState("");
  const [comment, setComment] = useState("");

  function handleFeedback() {
    if (!emoji && !comment) return;
    setFeedback([{ user: "You", ago: "Just now", comment: comment || emoji }, ...feedback]);
    setEmoji(""); setComment("");
  }

  return (
    <section className="bg-white rounded-2xl shadow p-6" aria-label="Menu and Feedback">
      <div className="flex items-center justify-between">
        <div>
          <h3 className="text-lg font-semibold">Today ‚Äî {messName}</h3>
          <p className="text-sm text-gray-500">Sep 21, 2025 ‚Ä¢ Meals & cost</p>
        </div>
        <div className="text-sm text-gray-600">Total cost today: ‚Çπ{meals.reduce((a, b) => a + b.price, 0)}</div>
      </div>
      <div className="mt-4 space-y-3">
        {meals.map(meal => (
          <div key={meal.name} className="border rounded-lg p-4">
            <div className="flex items-center justify-between">
              <div>
                <div className="text-sm text-gray-500">{meal.name}</div>
                <div className="font-medium">{meal.items}</div>
              </div>
              <div className="text-sm font-semibold">‚Çπ{meal.price}</div>
            </div>
          </div>
        ))}
      </div>
      <div className="mt-4 border-t pt-4">
        <h4 className="font-medium">Give Feedback</h4>
        <p className="text-xs text-gray-500">Rate your meal and leave a short comment</p>
        <div className="mt-3 flex items-center gap-3">
          <div className="flex items-center gap-1">
            {["üòç", "üôÇ", "üòê", "üòü", "ü§¢"].map(e => (
              <button
                key={e}
                className={`px-3 py-1 rounded-full border ${emoji === e ? "bg-amber-100" : ""}`}
                type="button"
                aria-label={e}
                onClick={() => setEmoji(e)}
              >
                {e}
              </button>
            ))}
          </div>
          <textarea
            className="flex-1 border rounded-lg p-2"
            rows={2}
            placeholder="Add a quick comment (optional)"
            value={comment}
            onChange={e => setComment(e.target.value)}
            aria-label="Feedback comment"
          />
          <button className="bg-amber-400 text-white px-4 py-2 rounded-lg" type="button" onClick={handleFeedback}>
            Submit
          </button>
        </div>
        <div className="mt-4 space-y-2">
          {feedback.map((fb, i) => (
            <div className="text-sm" key={i}>
              <strong>{fb.user}</strong> ‚Ä¢ <span className="text-xs text-gray-500">{fb.ago}</span>
              <div className="text-gray-700">{fb.comment}</div>
            </div>
          ))}
        </div>
        <button className="mt-4 text-xs text-blue-600 underline" onClick={onBack}>Back to Messes</button>
      </div>
    </section>
  );
}
